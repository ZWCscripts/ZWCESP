--//[ MENU and ESP-LIKE PLAYER HIGHLIGHT ]\\--

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local Camera = workspace.CurrentCamera

-- SETTINGS
local settings = {
    ShowNames = true,
    ShowTracers = true,
    MenuOpen = true,
    LineSize = 2,
    HighlightColor = Color3.fromRGB(0, 170, 255) -- Mavi
}

-- ESP FUNCTIONALITY
local highlights = {}

function createHighlight(player)
    if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        if not highlights[player] then
            local hl = Instance.new("Highlight")
            hl.Adornee = player.Character
            hl.FillColor = settings.HighlightColor
            hl.OutlineColor = Color3.new(1,1,1)
            hl.FillTransparency = 0.7
            hl.OutlineTransparency = 0
            hl.Parent = player.Character
            highlights[player] = hl
        end
    end
end

function removeHighlight(player)
    if highlights[player] then
        highlights[player]:Destroy()
        highlights[player] = nil
    end
end

Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        wait(1)
        createHighlight(player)
    end)
end)

Players.PlayerRemoving:Connect(function(player)
    removeHighlight(player)
end)

RunService.RenderStepped:Connect(function()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            createHighlight(player)
        else
            removeHighlight(player)
        end
    end
end)

-- ESP LABEL & TRACER
local gui = Instance.new("ScreenGui", game.CoreGui)
gui.Name = "MaviESPMenu"

local function DrawESP()
    for _, v in pairs(gui:GetChildren()) do
        if v.Name == "ESPLABEL" or v.Name == "TRACERLINE" then
            v:Destroy()
        end
    end
    if not settings.ShowNames and not settings.ShowTracers then return end
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local pos, onScreen = Camera:WorldToViewportPoint(player.Character.HumanoidRootPart.Position)
            if onScreen then
                if settings.ShowNames then
                    local nameLabel = Instance.new("TextLabel", gui)
                    nameLabel.Name = "ESPLABEL"
                    nameLabel.AnchorPoint = Vector2.new(0.5,0)
                    nameLabel.Position = UDim2.fromOffset(pos.X, pos.Y)
                    nameLabel.Text = player.Name.." ["..math.floor((LocalPlayer.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude).." Studs]"
                    nameLabel.TextColor3 = Color3.fromRGB(0,170,255)
                    nameLabel.BackgroundTransparency = 1
                    nameLabel.Font = Enum.Font.SourceSansBold
                    nameLabel.TextSize = 14
                    nameLabel.Size = UDim2.new(0, 200, 0, 20)
                end
                if settings.ShowTracers then
                    local line = Instance.new("Frame", gui)
                    line.Name = "TRACERLINE"
                    line.AnchorPoint = Vector2.new(0,0)
                    line.BackgroundColor3 = Color3.fromRGB(0,170,255)
                    line.BorderSizePixel = 0
                    line.Position = UDim2.fromOffset(Camera.ViewportSize.X/2, Camera.ViewportSize.Y)
                    local dist = (Vector2.new(pos.X, pos.Y)-Vector2.new(Camera.ViewportSize.X/2, Camera.ViewportSize.Y)).Magnitude
                    local angle = math.atan2(pos.Y-Camera.ViewportSize.Y, pos.X-Camera.ViewportSize.X/2)
                    line.Size = UDim2.new(0, dist, 0, settings.LineSize)
                    line.Rotation = math.deg(angle)
                    line.BackgroundTransparency = 0.2
                end
            end
        end
    end
end

RunService.RenderStepped:Connect(DrawESP)

--// MENU UI \\--
local menu = Instance.new("Frame", gui)
menu.Name = "Menu"
menu.BackgroundColor3 = Color3.fromRGB(30,30,40)
menu.BorderSizePixel = 0
menu.Position = UDim2.fromOffset(100,100)
menu.Size = UDim2.new(0, 320, 0, 220)
menu.Visible = settings.MenuOpen
menu.Active = true
menu.Draggable = true

local uicorner = Instance.new("UICorner", menu)
uicorner.CornerRadius = UDim.new(0,8)

local title = Instance.new("TextLabel", menu)
title.Text = "[SKINS UPDATE!] Mavi ESP!"
title.Size = UDim2.new(1,0,0,36)
title.BackgroundTransparency = 1
title.TextColor3 = Color3.fromRGB(255,255,255)
title.Font = Enum.Font.GothamBold
title.TextSize = 18

local function makeToggle(y, text, setting)
    local toggle = Instance.new("TextButton", menu)
    toggle.Text = text
    toggle.Size = UDim2.new(0.7, 0, 0, 32)
    toggle.Position = UDim2.new(0.05,0,0, y)
    toggle.BackgroundColor3 = Color3.fromRGB(40,40,50)
    toggle.TextColor3 = Color3.fromRGB(210,210,210)
    toggle.Font = Enum.Font.Gotham
    toggle.TextSize = 15
    toggle.AutoButtonColor = true
    toggle.MouseButton1Click:Connect(function()
        settings[setting] = not settings[setting]
        toggle.BackgroundColor3 = settings[setting] and Color3.fromRGB(0,170,255) or Color3.fromRGB(40,40,50)
    end)
    toggle.BackgroundColor3 = settings[setting] and Color3.fromRGB(0,170,255) or Color3.fromRGB(40,40,50)
end

makeToggle(48, "Show Name", "ShowNames")
makeToggle(88, "Tracers", "ShowTracers")

-- Line Size Slider
local slider = Instance.new("TextLabel", menu)
slider.Text = "Line Size: "..settings.LineSize
slider.Size = UDim2.new(0.7,0,0,32)
slider.Position = UDim2.new(0.05,0,0,128)
slider.BackgroundColor3 = Color3.fromRGB(40,40,50)
slider.TextColor3 = Color3.fromRGB(210,210,210)
slider.Font = Enum.Font.Gotham
slider.TextSize = 15

slider.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
        local con
        con = game:GetService("UserInputService").InputChanged:Connect(function(inp)
            if inp.UserInputType == Enum.UserInputType.MouseMovement or inp.UserInputType == Enum.UserInputType.Touch then
                local x = math.clamp(inp.Position.X - slider.AbsolutePosition.X, 1, slider.AbsoluteSize.X)
                settings.LineSize = math.floor(x/10)
                slider.Text = "Line Size: "..settings.LineSize
            end
        end)
        input.Changed:Connect(function()
            con:Disconnect()
        end)
    end
end)

-- Destroy GUI Button
local destroy = Instance.new("TextButton", menu)
destroy.Text = "Destroy GUI"
destroy.Size = UDim2.new(0.7,0,0,32)
destroy.Position = UDim2.new(0.05,0,0,168)
destroy.BackgroundColor3 = Color3.fromRGB(60,20,20)
destroy.TextColor3 = Color3.fromRGB(255,255,255)
destroy.Font = Enum.Font.GothamBold
destroy.TextSize = 15
destroy.MouseButton1Click:Connect(function()
    gui:Destroy()
end)

-- MENU TOGGLE BUTTON
local openButton = Instance.new("TextButton", gui)
openButton.Text = "â˜°"
openButton.Size = UDim2.new(0,44,0,44)
openButton.Position = UDim2.fromOffset(20, 20)
openButton.BackgroundColor3 = Color3.fromRGB(0,170,255)
openButton.TextColor3 = Color3.fromRGB(255,255,255)
openButton.Font = Enum.Font.GothamBold
openButton.TextSize = 20
openButton.ZIndex = 3
openButton.AutoButtonColor = true

openButton.MouseButton1Click:Connect(function()
    settings.MenuOpen = not settings.MenuOpen
    menu.Visible = settings.MenuOpen
end)

-- Mobile support (menu and button are draggable)
menu.Draggable = true
openButton.Draggable = true

-- END OF SCRIPT
